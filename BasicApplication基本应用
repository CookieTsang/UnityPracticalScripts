//1. 绑定Rigidbody
using UnityEngine;  

public class RigidbodyExample : MonoBehaviour  
{  
    private Rigidbody rb;  

    void Start()  
    {  
        rb = gameObject.AddComponent<Rigidbody>();  
    }  
}  
//2. 旋转物体rotate 
using UnityEngine;  

public class RotateObject : MonoBehaviour  
{  
    public float rotationSpeed = 100f;  

    void Update()  
    {  
        float horizontal = Input.GetAxis("Horizontal");  
        float vertical = Input.GetAxis("Vertical");  
        Vector3 rotation = new Vector3(vertical, horizontal, 0) * rotationSpeed * Time.deltaTime;  
        transform.Rotate(rotation);  
    }  
}  
//3. 平移物体
using UnityEngine;  

public class MoveObject : MonoBehaviour  
{  
    public float moveSpeed = 5f;  

    void Update()  
    {  
        float moveHorizontal = Input.GetAxis("Horizontal");  
        float moveVertical = Input.GetAxis("Vertical");  
        Vector3 movement = new Vector3(moveHorizontal, 0.0f, moveVertical) * moveSpeed * Time.deltaTime;  
        transform.Translate(movement);  
    }  
}  
//4. 第一人称摄像机环视
using UnityEngine;  

public class FirstPersonCamera : MonoBehaviour  
{  
    public float mouseSensitivity = 100f;  
    public Transform playerBody;  

    private float xRotation = 0f;  

    void Start()  
    {  
        Cursor.lockState = CursorLockMode.Locked;  
    }  

    void Update()  
    {  
        float mouseX = Input.GetAxis("Mouse X") * mouseSensitivity * Time.deltaTime;  
        float mouseY = Input.GetAxis("Mouse Y") * mouseSensitivity * Time.deltaTime;  

        xRotation -= mouseY;  
        xRotation = Mathf.Clamp(xRotation, -90f, 90f);  

        transform.localRotation = Quaternion.Euler(xRotation, 0f, 0f);  
        playerBody.Rotate(Vector3.up * mouseX);  
    }  
}  
